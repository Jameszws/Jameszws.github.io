import{_ as i}from"./chunks/transform.BS0UMiPh.js";import{_ as a,c as t,o as n,ag as e}from"./chunks/framework.Ci06YZUP.js";const l="/assets/chooseFrameworkVue2.BQb61epo.png",E=JSON.parse('{"title":"Vue2 使用","description":"","frontmatter":{},"headers":[],"relativePath":"pages/Vue2.md","filePath":"pages/Vue2.md"}'),p={name:"pages/Vue2.md"};function h(o,s,k,r,c,d){return n(),t("div",null,s[0]||(s[0]=[e(`<h1 id="vue2-使用" tabindex="-1">Vue2 使用 <a class="header-anchor" href="#vue2-使用" aria-label="Permalink to &quot;Vue2 使用&quot;">​</a></h1><div class="danger custom-block"><p class="custom-block-title">注意</p><p>请先<a href="./quick-start.html#安装依赖">安装核心依赖并配置好构建插件</a>，</p></div><h2 id="一、插件安装" tabindex="-1">一、插件安装 <a class="header-anchor" href="#一、插件安装" aria-label="Permalink to &quot;一、插件安装&quot;">​</a></h2><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><p>插件主要为提供翻译工具函数，类型<code>vue-i18n</code>中的<code>$t</code>函数，安装后，在项目代码中即可使用<code>$t</code>函数进行翻译。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @tc-i18n/vue2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><h3 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-label="Permalink to &quot;初始化&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tci18nVue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tc-i18n/vue2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tci18nVue, options)</span></span></code></pre></div><p><a href="./dependencies/framework-plugin.html#options参数">查看options参数</a></p><h2 id="二、初始化配置文件" tabindex="-1">二、初始化配置文件 <a class="header-anchor" href="#二、初始化配置文件" aria-label="Permalink to &quot;二、初始化配置文件&quot;">​</a></h2><p><strong>init</strong> 命令用于生成配置文件，执行一次即可。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tci18n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>选择 <strong>Vue2</strong></p><p><img src="`+l+'" alt="选择框架"></p><p>执行完后，会在项目根目录下生成 <strong>tci18n.config.json</strong> 文件。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>需要按照自己的实际需求修改 <strong>tci18n.config.json</strong> 配置文件，可以按照文件, 组件, 函数, 属性等维度, 自行决定哪些需要国际化，哪些不需要。<br><a href="./config/tci18n-config-json.html">查看 <strong>tci18n.config.json</strong> 配置</a></p></div><h2 id="三、提取语料" tabindex="-1">三、提取语料 <a class="header-anchor" href="#三、提取语料" aria-label="Permalink to &quot;三、提取语料&quot;">​</a></h2><p><strong>transform</strong> 命令用于提取语料，如果后续需要更新语料，重复执行此步骤即可。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tci18n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transform</span></span></code></pre></div><p><img src="'+i+`" alt="执行transform"></p><p>执行完成后，会将提取出来的语料数据存放在项目根目录下的 <strong>locale/langs.json</strong> 文件中。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;zh-cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">语料翻译</p><p>注意：<strong>transform</strong> 提取出来的语料只是未翻译的语料，如果要实现真正翻译，需要自己接入翻译工具对其进行翻译，然后放在 <strong>locale/langs.json</strong> 文件中， 比如：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;zh-cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;en-us&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><h2 id="四、常见问题" tabindex="-1">四、常见问题 <a class="header-anchor" href="#四、常见问题" aria-label="Permalink to &quot;四、常见问题&quot;">​</a></h2><p><a href="./question/question.html#如何切换语种">如何切换语种</a></p><p><a href="./question/question.html#三方组件库国际化">三方组件库国际化</a></p>`,26)]))}const y=a(p,[["render",h]]);export{E as __pageData,y as default};
