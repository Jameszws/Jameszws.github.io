import{_ as i}from"./chunks/transform.BS0UMiPh.js";import{_ as a,c as n,o as t,ag as l}from"./chunks/framework.Ci06YZUP.js";const e="/assets/chooseFrameworkWechat.-XpZS2Jx.png",u=JSON.parse('{"title":"微信小程序 使用","description":"","frontmatter":{},"headers":[],"relativePath":"pages/wechat.md","filePath":"pages/wechat.md"}'),p={name:"pages/wechat.md"};function h(o,s,c,k,r,d){return t(),n("div",null,s[0]||(s[0]=[l('<h1 id="微信小程序-使用" tabindex="-1">微信小程序 使用 <a class="header-anchor" href="#微信小程序-使用" aria-label="Permalink to &quot;微信小程序 使用&quot;">​</a></h1><p>由于微信小程序的构建过程由微信开发工具执行，所以为了不影响本地源文件代码，采用的方案是由<code>@tc-i18n</code> 生成转换后完整的项目文件，然后将新的项目文件在微信开发工具中运行上传。</p><h2 id="一、安装插件" tabindex="-1">一、安装插件 <a class="header-anchor" href="#一、安装插件" aria-label="Permalink to &quot;一、安装插件&quot;">​</a></h2><p>插件主要为提供翻译工具函数，类型<code>vue-i18n</code>中的<code>$t</code>函数，安装后，在项目代码中即可使用<code>$t</code>函数进行翻译。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @tci18n/miniprogram</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div><h2 id="二、初始化配置文件" tabindex="-1">二、初始化配置文件 <a class="header-anchor" href="#二、初始化配置文件" aria-label="Permalink to &quot;二、初始化配置文件&quot;">​</a></h2><p><strong>init</strong> 命令用于生成配置文件，执行一次即可。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tci18n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre></div><p>选择 <strong>微信小程序</strong></p><p><img src="'+e+`" alt="选择框架"></p><p>执行完后，会在项目根目录下生成 <strong>tci18n.config.json</strong> 文件。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>需要按照自己的实际需求修改 <strong>tci18n.config.json</strong> 配置文件，可以按照文件, 组件, 函数, 属性等维度, 自行决定哪些需要国际化，哪些不需要。<br><a href="./config/tci18n-config-json.html">查看 <strong>tci18n.config.json</strong> 配置</a></p></div><h2 id="三、修改-tci18n-config-json-配置文件" tabindex="-1">三、修改 <strong>tci18n.config.json</strong> 配置文件 <a class="header-anchor" href="#三、修改-tci18n-config-json-配置文件" aria-label="Permalink to &quot;三、修改 **tci18n.config.json** 配置文件&quot;">​</a></h2><p>用来指定输出的项目文件夹目录， 最终会生成完整项目文件结构。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dist&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 制定输出的项目文件夹目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="四、提取语料" tabindex="-1">四、提取语料 <a class="header-anchor" href="#四、提取语料" aria-label="Permalink to &quot;四、提取语料&quot;">​</a></h2><p><strong>transform</strong> 命令用于提取语料，如果后续需要更新语料，重复执行此步骤即可。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tci18n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transform</span></span></code></pre></div><p><img src="`+i+`" alt="执行transform"></p><p>执行完成后，会将提取出来的语料数据存放在项目根目录下的 <strong>locale/langs.json</strong> 文件中。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;zh-cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">语料翻译</p><p>注意：<strong>transform</strong> 提取出来的语料只是未翻译的语料，如果要实现真正翻译，需要自己接入翻译工具对其进行翻译，然后放在 <strong>locale/langs.json</strong> 文件中， 比如：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;zh-cn&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;en-us&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;你好&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><h2 id="五、使用语料和设置语种" tabindex="-1">五、使用语料和设置语种 <a class="header-anchor" href="#五、使用语料和设置语种" aria-label="Permalink to &quot;五、使用语料和设置语种&quot;">​</a></h2><p>微信小程序使用全局变量来控制当前语种和语料资源</p><ul><li><code>globalThis.__tci18n_locale__</code>: 当前显示的语种key</li><li><code>globalThis.__tci18n_langs__</code>: 翻译后的语料资源</li></ul><p>将翻译好的 <strong>langs.json</strong> 语料资源存直接赋值给 <code>globalThis.__tci18n_langs__</code> 变量，然后通过切换 <code>globalThis.__tci18n_locale__</code> 变量来切换语种。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>除了使用 <code>__tci18n_locale__</code>和<code>__tci18n_langs__</code> 全局变量来设置语种和语料资源外，也可以利用本地存储来设置</p><p>语种取值逻辑是：<code>globalThis.__tci18n_locale__ || wx.getStorageSync(&#39;tci18nLocale&#39;) || &#39;zh-cn&#39;</code></p><p>语料资源取值逻辑是：<code>globalThis.__tci18n_langs__ || wx.getStorageSync(&#39;tci18nLangs&#39;) || {}</code></p></div><p>后续切换语种，只需要修改 <code>globalThis.__tci18n_locale__</code> 变量即可。</p><p><strong>然后再次执行 <strong>transform</strong> 命令，生成转换后的项目文件</strong></p><h2 id="六、运行项目" tabindex="-1">六、运行项目 <a class="header-anchor" href="#六、运行项目" aria-label="Permalink to &quot;六、运行项目&quot;">​</a></h2><p>执行完 <strong>transform</strong> 命令后，会把转换后的项目文件输出到 <strong>output</strong> 配置的目录下，将新的项目文件导入在微信开发工具中运行即可。</p>`,31)]))}const _=a(p,[["render",h]]);export{u as __pageData,_ as default};
