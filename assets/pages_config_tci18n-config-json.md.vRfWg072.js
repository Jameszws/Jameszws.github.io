import{_ as e,c as t,o as n,ag as r}from"./chunks/framework.Ci06YZUP.js";const h=JSON.parse('{"title":"tci18n.config.json","description":"","frontmatter":{},"headers":[],"relativePath":"pages/config/tci18n-config-json.md","filePath":"pages/config/tci18n-config-json.md"}'),i={name:"pages/config/tci18n-config-json.md"};function a(l,o,s,c,d,g){return n(),t("div",null,o[0]||(o[0]=[r('<h1 id="tci18n-config-json" tabindex="-1">tci18n.config.json <a class="header-anchor" href="#tci18n-config-json" aria-label="Permalink to &quot;tci18n.config.json&quot;">​</a></h1><p>配置文件，可自定义国际化解析提取逻辑，配置项如下：</p><h2 id="entry" tabindex="-1">entry <a class="header-anchor" href="#entry" aria-label="Permalink to &quot;entry&quot;">​</a></h2><p>指定当前项目需要进行国际化的文件，支持glob匹配规则。</p><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;src&quot;, &quot;src/**/*.js&quot;]</code></li></ul><h2 id="exclude" tabindex="-1">exclude <a class="header-anchor" href="#exclude" aria-label="Permalink to &quot;exclude&quot;">​</a></h2><p>排除不需要进行国际化的文件，支持glob匹配规则，通常与entry配合使用，达到精细化控制国际化文件的目的。</p><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;src&quot;, &quot;src/**/*.js&quot;]</code></li></ul><h2 id="keyhasscene" tabindex="-1">keyHasScene <a class="header-anchor" href="#keyhasscene" aria-label="Permalink to &quot;keyHasScene&quot;">​</a></h2><p>提取出来的语料是否带有文件路径后缀，如: 你好#!!!#src/hello.vue_1，开启后可以使相同原文的语料同时存在。</p><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认值：</strong> <code>false</code></li></ul><h2 id="extractonly" tabindex="-1">extractOnly <a class="header-anchor" href="#extractonly" aria-label="Permalink to &quot;extractOnly&quot;">​</a></h2><p>是否只提取语料而不替换本地源文件代码，关闭后在提取语料的同时会对本地源文件代码进行转换。</p><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认值：</strong> <code>false</code></li></ul><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>当开启<code>extractOnly</code>时，会改变本地源文件源代码，请谨慎使用。</p></div><h2 id="ignorecomponents" tabindex="-1">ignoreComponents <a class="header-anchor" href="#ignorecomponents" aria-label="Permalink to &quot;ignoreComponents&quot;">​</a></h2><p>需要忽略提取的组件名，对于一些不需要国际化的组件，可以将组件名称配置在其中。</p><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;code&quot;, &quot;my-component&quot;]</code></li></ul><h2 id="ignoremethods" tabindex="-1">ignoreMethods <a class="header-anchor" href="#ignoremethods" aria-label="Permalink to &quot;ignoreMethods&quot;">​</a></h2><p>需要忽略提取的函数名字，可以忽略函数中存在的文案。</p><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;console.log&quot;, &quot;myFunction&quot;]</code></li></ul><h2 id="ignoreattrs" tabindex="-1">ignoreAttrs <a class="header-anchor" href="#ignoreattrs" aria-label="Permalink to &quot;ignoreAttrs&quot;">​</a></h2><p>需要忽略的元素属性名字，可以忽略元素中一些属性中存在的文案。</p><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;style&quot;, &quot;attributeName&quot;]</code></li></ul><h2 id="ignorestrings" tabindex="-1">ignoreStrings <a class="header-anchor" href="#ignorestrings" aria-label="Permalink to &quot;ignoreStrings&quot;">​</a></h2><p>需要忽略的字符串，可以忽略代码中所有命中的字符串。如果字符串以 <code>^</code> 开头，则会将开头 <code>^</code> 字符去掉后，剩余字符串按照正则表达式进行匹配。</p><ul><li><strong>类型：</strong> <code>string[]</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;你好&quot;, &quot;^/你好/&quot;]</code></li></ul><h2 id="framework" tabindex="-1">framework <a class="header-anchor" href="#framework" aria-label="Permalink to &quot;framework&quot;">​</a></h2><p>当前项目使用的框架，目前支持 vue2, vue3, react, 微信小程序, 静态html。 执行 <strong>init</strong> 命令时候，会按照选择的框架自动设置。</p><ul><li><strong>类型：</strong> <code>string</code></li><li><strong>默认值：</strong> ``</li><li><strong>示例：</strong> <code>&quot;vue2&quot;</code></li></ul><h2 id="plugins" tabindex="-1">plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;plugins&quot;">​</a></h2><p>使用的插件名称，详见 <a href="./../plugins/plugin.html">插件</a></p><ul><li><strong>类型：</strong> <code>Array&lt;string | Plugin</code></li><li><strong>默认值：</strong> <code>[]</code></li><li><strong>示例：</strong> <code>[&quot;@tci18n/plugin-vm-to-template&quot;]</code></li></ul><h2 id="isdecorator" tabindex="-1">isDecorator <a class="header-anchor" href="#isdecorator" aria-label="Permalink to &quot;isDecorator&quot;">​</a></h2><p>是否开启装饰器解析，如果代码中有装饰器语法，则需要设置为true。</p><ul><li><strong>类型：</strong> <code>boolean</code></li><li><strong>默认值：</strong> <code>false</code></li></ul>',36)]))}const p=e(i,[["render",a]]);export{h as __pageData,p as default};
