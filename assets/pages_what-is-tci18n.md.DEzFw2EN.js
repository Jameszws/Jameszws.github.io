import{_ as a,c as t,o as c,ag as o}from"./chunks/framework.Ci06YZUP.js";const _=JSON.parse('{"title":"什么是@tc-i18n","description":"","frontmatter":{},"headers":[],"relativePath":"pages/what-is-tci18n.md","filePath":"pages/what-is-tci18n.md"}'),i={name:"pages/what-is-tci18n.md"};function d(l,e,s,n,r,p){return c(),t("div",null,e[0]||(e[0]=[o('<h1 id="什么是-tc-i18n" tabindex="-1">什么是@tc-i18n <a class="header-anchor" href="#什么是-tc-i18n" aria-label="Permalink to &quot;什么是@tc-i18n&quot;">​</a></h1><p><code>@tc-i18n</code> 是一个为前端项目打造的国际化插件集，它可以帮助开发者轻松实现多语言支持。</p><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p><code>@tc-i18n</code> 最初目的是为了解决传统老项目国际化改造难的问题，按照一般的国际化改造，需要手动去提取代码中的文案，并且利用<code>vue-i18n</code>或<code>react-intl</code>等三方库来实现国际化，整个过程比较耗费开发人员的精力，从而提出了新的国际化改造思路。</p><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p><code>@tc-i18n</code>是利用AST对源代码进行解析，通过配置识别出代码中的文案语料，然后自动进行文案提取和转换，配合提供的一些列插件从而实现在不改变源码，保持原来开发习惯下让项目拥有国际化能力。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>跳到<a href="/pages/quick-start.html">快速开始</a>了解详情。</p></div><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li><p>母语开发，无需使用<code>$t</code>函数</p></li><li><p>采用<code>Monorepo</code>架构，可以独立使用各个功能模块</p></li><li><p>命令行工具实现语料自动化提取，代码自动化转换</p></li><li><p>支持<code>js</code>，<code>ts</code>，<code>jsx</code>，<code>tsx</code>，<code>vue</code>文件解析</p></li><li><p>丰富的配置项，自定义提取逻辑</p></li><li><p>支持插件扩展，插拔使用</p></li><li><p>支持编译时转换，可以不影响本地源文件代码</p></li></ul>',9)]))}const u=a(i,[["render",d]]);export{_ as __pageData,u as default};
